name: main-tag-create
env:
    AppName: GenappML2


concurrency:
    group: Main-Branch
    
on:
  workflow_dispatch:
    inputs:
      tagname:
        description: 'Tag Name'
        required: true
        default: 'default-tag'

jobs:
  create-production-tag-and-branch-release:
    runs-on: build-runner1
    steps:
      - name: Get the tagname
        run: |
          echo "Tag Name: ${{ github.event.inputs.tagname }}"
          
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: 'main'
      # Change tag from pre-release to production
      
      - name: Update Release Tag
        uses: actions/github-script@v5
        with:
          script: |
            const tagName = "${{ github.event.inputs.tagname }}";
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const release = releases.data.find(release => release.tag_name === tagName);
            if (release) {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id,
                draft: false,
                prerelease: false
              });
            }
          shell: cmd
        
      - name: Update production tag in TAG.txt
        run: echo ${{ github.event.inputs.tagname }} > TAG.txt
        shell: cmd

      - name: Commit and push changes
        id: commit
        run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add TAG.txt
            git diff --staged --quiet || git commit -m "Add TAG.txt with v2.1.3 tag that was deployed to production via UCD"
            git push
        shell: cmd
    
   #   - name: Delete Branch
   #     run: |
   #         set BRANCH_NAME=${{ github.event.inputs.tagname }}
   #         echo "Deleting branch: %BRANCH_NAME%"
   #         git fetch --prune
   #         if exist .git\refs\heads\%BRANCH_NAME% (
   #           git push origin --delete %BRANCH_NAME%
   #           echo "Branch %BRANCH_NAME% deleted successfully."
   #         ) else (
   #           echo "Branch %BRANCH_NAME% does not exist."
   #         )
   #     shell: cmd
   #     if: github.event.inputs.tagname != 'default-tag'  # Don't delete the default branch

   
      # Create a new branch
      - name: Create Release Maintenance Branch, ${{ github.event.inputs.tagname }}
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ github.event.inputs.tagname }}
        
      # Print all variables
      - name: Print Variables
        run: |
          echo "Tag received from UCD: ${{ github.event.inputs.tagname }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Action: ${{ github.action }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Path: ${{ github.event_path }}"
          echo "Workspace: ${{ github.workspace }}"
          echo "SHA: ${{ github.sha }}"
          echo "Ref: ${{ github.ref }}"
          echo "Head Ref: ${{ github.head_ref }}"
          echo "Base Ref: ${{ github.base_ref }}"
          echo "Server URL: ${{ github.server_url }}"
          echo "API URL: ${{ github.api_url }}"
          echo "GraphQL URL: ${{ github.graphql_url }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "Run Attempt: ${{ github.run_attempt }}"
          echo "Actor ID: ${{ github.actor_id }}"
          echo "Workflow URL: ${{ github.workflow_url }}"
          echo "Event URL: ${{ github.event_url }}"
          echo "Repository URL: ${{ github.repository_url }}"
          echo "Repository Owner: ${{ github.repository_owner }}"   

